Time Complexity - O(N)

import java.util.*;
class Codechef {
    String EasyPronunciation(String s, int n) {
        if (n < 4) return "YES";
        for (int i = 0; i <= n - 4; i++) {
            if (isConsonant(s.charAt(i)) && isConsonant(s.charAt(i + 1)) &&
                isConsonant(s.charAt(i + 2)) && isConsonant(s.charAt(i + 3))) {
                return "NO";
            }
        }
        return "YES";
    }
    boolean isConsonant(char ch) {
        return !(ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u');
    }

    	public static void main (String[] args) throws java.lang.Exception
	{
		Codechef obj= new Codechef();
		Scanner sc = new Scanner(System.in);
		int t=sc.nextInt();
		for(int i=0;i<t;i++)
		{
		    int slength=sc.nextInt();
		    String s= sc.next();
		    System.out.println(obj.EasyPronunciation(s,slength));
		}
	}
}

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Time Complexity - O(N)
import java.util.*;
class Codechef
{
    String EasyPronunciation(String s, int slength)
    {
        s = s.toLowerCase();
        if(slength<4)
        return "YES";
        for(int j=0;j<=slength-4;j++)
        {
             int current=0;
            for(int i=j;i<j+4;i++)
            {if((s.charAt(i)!='a') && (s.charAt(i)!='e') && (s.charAt(i)!='i') && (s.charAt(i)!='o') && (s.charAt(i)!='u'))
            {
                current+=1;
            }
        }
        if(current>=4)
        return "NO";
        } return "yes";
    }
	public static void main (String[] args) throws java.lang.Exception
	{
		Codechef obj= new Codechef();
		Scanner sc = new Scanner(System.in);
		int t=sc.nextInt();
		for(int i=0;i<t;i++)
		{
		    int slength=sc.nextInt();
		    String s= sc.next();
		    System.out.println(obj.EasyPronunciation(s,slength));
		}
	}
}
